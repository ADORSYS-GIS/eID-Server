name: CI

on: pull_request

jobs:
  setup:
    name: Setup Rust Toolchain
    runs-on: ubuntu-latest
    outputs:
      cache-key: ${{ steps.rust-toolchain.outputs.cache-key }}
    steps:
      - name: Fetch Repository
        uses: actions/checkout@v4

      - name: Install Stable Rust toolchain
        id: rust-toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: rustfmt, clippy

  cargo-build:
    name: Cargo Build
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Fetch Repository
        uses: actions/checkout@v4

      - name: Cache Rust Dependencies
        uses: ./.github/actions/cache
        with:
          cache-key: ${{ runner.os }}-cargo-${{ needs.setup.outputs.cache-key }}

      - name: Cargo Build
        run: cargo build --workspace --all-targets --all-features

  format-and-lint:
    name: Format and Lint Checks
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Fetch Repository
        uses: actions/checkout@v4

      - name: Cache Rust Dependencies
        uses: ./.github/actions/cache
        with:
          cache-key: ${{ runner.os }}-cargo-${{ needs.setup.outputs.cache-key }}

      - name: Cargo Format Check
        run: cargo fmt --all --check

      - name: Cargo Clippy Check
        run: cargo clippy --workspace --all-targets --all-features -- -D warnings

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "16"

      - name: Check formatting with Prettier
        run: npx prettier . --check

  cargo-nextest:
    name: Cargo Nextest
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Fetch Repository
        uses: actions/checkout@v4

      - name: Cache Rust Dependencies
        uses: ./.github/actions/cache
        with:
          cache-key: ${{ runner.os }}-cargo-${{ needs.setup.outputs.cache-key }}

      - name: Install cargo-nextest
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-nextest

      - name: Run Cargo Tests
        run: cargo nextest run --workspace --all-targets --all-features --no-fail-fast

  cargo-doc:
    name: Cargo Doc
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Fetch Repository
        uses: actions/checkout@v4

      - name: Cache Rust Dependencies
        uses: ./.github/actions/cache
        with:
          cache-key: ${{ runner.os }}-cargo-${{ needs.setup.outputs.cache-key }}

      - name: Cargo Doc
        run: cargo doc --workspace --all-features --no-deps
